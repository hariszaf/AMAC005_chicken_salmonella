# This is a template configuration file for running the stand-alone version of microbetag
# Remember to always make sure you are using the corresponding to your microbetag version template. 
# For example, if you are running the hariszaf/microbetag:v1.0.2 
# then, you need to make sure that the config.yml template also corresponds to the v1.0.2. 

# version: v1.0.4
# Author: Haris Zafeiropoulos
# Date: Jun, 2025


# ------
# INPUT/OUTPUT
# ------

abundance_table_file: 
  file_path: 
  description: >
    Filename of the abundance table file.
    The taxonomy scheme is irrelevant in the case of the stand-alone tool.
    However, ensure that the sequence identifiers in this table match those in your network (if provided) 
    and in your bins/.faa/.xml files in case you provide relevant input files.
  required: 
    value: false
    when: 
  examples: 
    - thirty_Samples.tsv
    - counts_genomes_taxonomies.tsv
  type: string

bins_fasta:
  dir_path: microbetag_input/my_bins/
  description: >
    Name of the folder with the bins .fasta files.
  required: 
    value: false
    when: 
  type: string

orfs:
  dir_path: 
  description: >
    In case Operating Reading Frames (ORFs) have been already computed (e.g., using Prodigal), 
    you may provide the path to the folder with the .fna files. 
  required: 
    value: false
    when: 
  type: Path

edge_list:
  file_path:
  description: >
    If co-occurrence network already available, please provide its edge list; a 2 column tab separated file.
  required: false
  examples: 
    - edgelist.csv
  type: string


sequence_id_taxonomy_map:
  file_path:
  description: >
    A file
  required: 
    value: false
    when: 
  examples:
    - 
  type: string


output_directory: 
  dir_path: /home/luna.kuleuven.be/u0156635/github_repos/contribute-to/AMAC005_chicken_salmonella/microbetag_analysis/mgg_prec
  description: >
    Name of the output folder that will be built inside the io_path directory.
  required: true
  type: string

# -----
# Computing
# -----
threads:
  value: 8
  description: Number of CPUs to be used.
  required: false
  type: integer


# -----
# Precalculations only
# -----
precalulations_only:
  value: false
  description: >
    If True, only precalculations will be performed.
    Neither an abundance table nor an existing network will be considered—only the list of bins/MAGs provided 
    in the bins_fasta parameter.

    In this mode, microbetag ensures that all required precalculations for the requested annotation steps 
    are available. If any are missing, they will be performed. Once all necessary precalculations are complete, 
    the network will be annotated.
  required: false
  type: bool


faprotax_annotation:
  value: true
  description: >
    Runs FAPROTAX on you abundance table and annotate network nodes with its predictions
  default: true
  type: bool


phenotrex_traits:
  value: true
  description: >
    Runs phenotrex on your genomes to annotate them with COGs and then predicts whether they carry a set of phenotypic traits
    or not, using the microbetagDB set of models
  default: true
  type: bool

# -----
# Pathway complementarity: if the pathway_complementarity parameter is set as False, 
# the rest of the parameters will not be considered. 
# -----
pathway_complementarity:
  value: true
  description: >
    Set whether pathway complementarities should be calcuated and then used to annotated the edges of the 
    co-occurrence network.
  required: false
  type: bool


max_length_for_complement_from_scratch:
  value: 3
  description: >
    In some cases, a species may lack KOs related to a module but can acquire a complete alternative from a donor species.
    However, KEGG modules vary in size—some consist of just a couple of KO terms, while others require dozens.
    Set the maximun length of a module that can be exchanged when no module related KO is present in the beneficiary in the first place.
  required: false
  type: integer


pathway_complement_percentage:
  value: 0.35
  description: >
    The percentage of a module (i.e., the number of KO terms) that a potential donor can provide to a beneficiary.
    For example, if a module consists of 5 KOs and the donor can supply 4 missing ones, such an event is unlikely.
    If no value is specified, all possible complements will be returned.
  required: false
  type: float


ko_merged_file:
  file_path: mgg_prec/KEGG_annotations/ko_merged.txt
  description: >
    A merged 3-column file with bins, contigs and the annotated KO term for all your genomes/bins. 
    Needs to have a header and keep this order. 
    You may have this from a previous microbetag run, or from annotations outside the microbetag software. 
    
    Here is a example: 
    bin_id	            contig_id	                                                KO
    D300418:bin_000001	D300418:bin_000001_D300418:bin_000001@contig_00001691_10	K07258
    D300418:bin_000001	D300418:bin_000001_D300418:bin_000001@contig_00001691_13	K06024
  required: false
  type: Path


kofam_database:
  file_path:
  description: >
    After downloading KOfam database from ftp://ftp.genome.jp/pub/db/kofam/ and decompress it. 
    You will get profile HMMs in profiles/ directory and a ko_list file.

    u0156635@gbw-l-l0074:kofam_database$ ls 
    ko_list  profiles

    Provide the path to the kofam directory_database directory.
  required: 
    value: false
    when: 
  type: Path


# -----
# Seed complementarity
# -----
seed_complementarity:
  value: true
  description: >
    This is the most time-consuming and challengint step of the workflow. 
    You may perform microbetag with or without it by setting this argument as True or False correspondinly.
  required: false
  type: bool

#/mgg_prec/reconstructions/GENREs
sc_input_type:
  value: models
  value_from: 
    - bins_fasta
    - coding_regions
    - proteins_faa
    - models
  description: >
    Specifies the type of information included in the input files for GEM reconstruction.
    This parameter is closely related to `sequence_files_for_reconstructions`, which defines the path to the files described here.

    - If GEMs are already available, set `input_type_for_seed_complementarities` to models 
    and provide the path to the .xml models via `sequence_files_for_reconstructions`.
    - If you plan to use ModelSEEDpy for GEM reconstruction and have already annotated your genomes with RAST (i.e., gto, gto_2, 
    and their corresponding .faa files are available), set this parameter to `proteins_faa` and specify the directory containing 
    the .faa files in `sequence_files_for_reconstructions`.
    - If neither of the above is available, set this parameter to bins_fasta and leave `sequence_files_for_reconstructions` blank.
  type: string
  required: true


prev_calc_seed_sets:
  dir_path: 
  required: false 
  description: >
    Path to directory with SeedSetDic.json and nonSeedSetDic.json files if previously calculated for the genomes under study
    Leave empty if no previously calculated dictionaries.
  type: string
  to-do: ../test_data/test_phylomint/output_files/ 


prev_conf: 

  file_path:
  description: >

  required:
  type:


prev_nonseeds:

  file_path:
  description: >
    
  required:
  type:



# -----
# Metabolic network reconstruction: there parameters should be considered only in case seed complementarity 
# is about to be performed and metabolic networks are not already available
# -----
sequence_files_for_reconstructions:
  dir_path: mgg_prec/reconstructions/GENREs 
  required: 
    value: true
    when: if input_type_for_seed_complementarities != "bins_fasta". Could be either .fna or .faa files.
  description: 
  type: string

gene_predictor:
  value: fragGeneScan
  value_from: 
    - fragGeneScan
    - prodigal
    - RAST
  required: 
    value: False
    when: orfs_per_bin is None
  description: "RAST annotation is required/strongly suggested* if modelseedpy is going to be used as genre_reconstruction_with.
  Otherwise, the user may choose among fragGeneScan or prodigal; in the latter, the .faa returned by DiTing will be used."
  type: string

genre_reconstruction_with:
  value: carveme
  value_from: 
    - modelseedpy
    - carveme
  required: 
    value: True
    when: seed_complementarity == True

gapfill_model:
  value: True
  description: "If True, modelseedpy will gapfill the reconstruction."
  type: bool

gapfill_media: 
  value: True
  description: If True, modelseedpy will 
  type: bool


# -----
# Phen traits prediction
# -----
min_proba:
  value: 0.6
  description: >
    Minimum confidence that a prediction needs to have for keeping the the presence/absence finding.
  type: float
  required: false
  default: 0.6

# -----
# manta 
# -----
network_clustering:
  value: False
  description:
  type: bool
  required: False


prev_clustered_network:
  file_path: 
  description: >
    In case you have performed manta already in a previous run of microbetag or as a stand-alone tool, 
    you may provide directly its findings in .cyjs format.
  type: string
  required: false
  example: 
    - microbetag/ext_data/input_data/manta.cyjs

# -----
# Flashweave
# -----
metadata_file:
  file_path: all_metadata_mets_transp.tsv
  description: >
    Only .tsv files are accepted.
  required: false
  default: 
  type: string

flashweave_args:
    heterogeneous:
      value: False
      description: >
        Enable heterogeneous mode for multi-habitat or -protocol data with at least thousands of samples (FlashWeaveHE).
      required: true
      default: false
      type: bool
    
    sensitive:
      value: True
      description: >
        Enable fine-grained associations (FlashWeave-S, FlashWeaveHE-S), sensitive=false results in the fast modes 
        FlashWeave-F or FlashWeaveHE-F.
      required: true
      default: true
      type: bool

    max_k:
      value:
      description: >
        Maximum size of conditioning sets, high values can strongly increase runtime. 
        max_k=0 results in no conditioning (univariate mode).
      required: false
      default: 3
      type: integer

    alpha:
      value:
      description: Threshold used to determine statistical significance.
      required: false
      default: 0.01
      type: 

    conv:
      value:
      description: >
        Convergence threshold, i.e. if conv=0.01 assume convergence if the number of edges increased by only 1% after 100% 
        more runtime (checked in intervals).
      required: false
      default: 0.01
      type: 

    feed_forward:
      value:
      description: Enable feed-forward heuristic
      required: false
      default: true
      type: boolean

    max_tests: 
      value:
      description: >
        Maximum number of conditional tests that should be performed on a variable pair before association is assumed.
      required: false
      default: 10e6
      type: integer

    hps:
      value:
      description: Reliability criterion for statistical tests when sensitive=false.
      required: false
      default: 5
      type: integer

    FDR:
      value: 
      description: >
        Perform False Discovery Rate correction (Benjamini-Hochberg method) on pairwise associations.
      required: false
      default: true
      type: boolean

    n_obs_min:
      value:  
      desription: >
        Don't compute associations between variables having less reliable samples (i.e. non-zero if heterogeneous=True) 
        than this number. 
        -1  automatically choose a threshold.
      required: false
      default: 20 (in case of discrete computer systems)
      type: integer

    time_limit:
      value: 
      description: >
        If feed-forward heuristic is active, time_limit determines the interval (seconds) at which neighborhood information 
        is updated.
        -1.0 set heuristically, 0.0 no time_limit, otherwise time limit in seconds
      required: false
      default: -1.0
      type: float

    normalize:
      value: 
      description: Automatically choose and perform data normalization (based on sensitive and heterogeneous)
      required: false
      default: true
      type: bool

    track_rejections:
      value: 
      description: >
        Store for each discarded edge, which variable set lead to its exclusion (can be memory intense for large networks)
      required: false
      default: false
      type: boolean

    verbose:
      value:
      description: Print progress information
      required: false
      default: true
      type: bool
